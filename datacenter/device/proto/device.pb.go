// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	device.proto

It has these top-level messages:
	OnlineRequest
	OfflineRequest
	ListRequest
	DetailRequest
	DetailResponse
	OperationResponse
	ListResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type OnlineRequest struct {
	Iid   string            `protobuf:"bytes,1,opt,name=iid" json:"iid,omitempty"`
	Node  string            `protobuf:"bytes,2,opt,name=node" json:"node,omitempty"`
	Props map[string]string `protobuf:"bytes,3,rep,name=props" json:"props,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *OnlineRequest) Reset()                    { *m = OnlineRequest{} }
func (m *OnlineRequest) String() string            { return proto1.CompactTextString(m) }
func (*OnlineRequest) ProtoMessage()               {}
func (*OnlineRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OnlineRequest) GetIid() string {
	if m != nil {
		return m.Iid
	}
	return ""
}

func (m *OnlineRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *OnlineRequest) GetProps() map[string]string {
	if m != nil {
		return m.Props
	}
	return nil
}

type OfflineRequest struct {
	Iid      string `protobuf:"bytes,1,opt,name=iid" json:"iid,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=deviceId" json:"deviceId,omitempty"`
}

func (m *OfflineRequest) Reset()                    { *m = OfflineRequest{} }
func (m *OfflineRequest) String() string            { return proto1.CompactTextString(m) }
func (*OfflineRequest) ProtoMessage()               {}
func (*OfflineRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OfflineRequest) GetIid() string {
	if m != nil {
		return m.Iid
	}
	return ""
}

func (m *OfflineRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type ListRequest struct {
	Iid string `protobuf:"bytes,1,opt,name=iid" json:"iid,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListRequest) GetIid() string {
	if m != nil {
		return m.Iid
	}
	return ""
}

type DetailRequest struct {
	Iid      string `protobuf:"bytes,1,opt,name=iid" json:"iid,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=deviceId" json:"deviceId,omitempty"`
}

func (m *DetailRequest) Reset()                    { *m = DetailRequest{} }
func (m *DetailRequest) String() string            { return proto1.CompactTextString(m) }
func (*DetailRequest) ProtoMessage()               {}
func (*DetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DetailRequest) GetIid() string {
	if m != nil {
		return m.Iid
	}
	return ""
}

func (m *DetailRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type DetailResponse struct {
	DeviceId   string            `protobuf:"bytes,1,opt,name=deviceId" json:"deviceId,omitempty"`
	Iid        string            `protobuf:"bytes,2,opt,name=iid" json:"iid,omitempty"`
	OnlineTime string            `protobuf:"bytes,3,opt,name=onlineTime" json:"onlineTime,omitempty"`
	Node       string            `protobuf:"bytes,4,opt,name=node" json:"node,omitempty"`
	Props      map[string]string `protobuf:"bytes,5,rep,name=props" json:"props,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *DetailResponse) Reset()                    { *m = DetailResponse{} }
func (m *DetailResponse) String() string            { return proto1.CompactTextString(m) }
func (*DetailResponse) ProtoMessage()               {}
func (*DetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DetailResponse) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DetailResponse) GetIid() string {
	if m != nil {
		return m.Iid
	}
	return ""
}

func (m *DetailResponse) GetOnlineTime() string {
	if m != nil {
		return m.OnlineTime
	}
	return ""
}

func (m *DetailResponse) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *DetailResponse) GetProps() map[string]string {
	if m != nil {
		return m.Props
	}
	return nil
}

type OperationResponse struct {
	Ret  bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Code int32  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *OperationResponse) Reset()                    { *m = OperationResponse{} }
func (m *OperationResponse) String() string            { return proto1.CompactTextString(m) }
func (*OperationResponse) ProtoMessage()               {}
func (*OperationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OperationResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *OperationResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *OperationResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type ListResponse struct {
	Devices []*DetailResponse `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListResponse) GetDevices() []*DetailResponse {
	if m != nil {
		return m.Devices
	}
	return nil
}

func init() {
	proto1.RegisterType((*OnlineRequest)(nil), "proto.OnlineRequest")
	proto1.RegisterType((*OfflineRequest)(nil), "proto.OfflineRequest")
	proto1.RegisterType((*ListRequest)(nil), "proto.ListRequest")
	proto1.RegisterType((*DetailRequest)(nil), "proto.DetailRequest")
	proto1.RegisterType((*DetailResponse)(nil), "proto.DetailResponse")
	proto1.RegisterType((*OperationResponse)(nil), "proto.OperationResponse")
	proto1.RegisterType((*ListResponse)(nil), "proto.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Device service

type DeviceClient interface {
	Online(ctx context.Context, in *OnlineRequest, opts ...client.CallOption) (*DetailResponse, error)
	Offline(ctx context.Context, in *OfflineRequest, opts ...client.CallOption) (*OperationResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
	Detail(ctx context.Context, in *DetailRequest, opts ...client.CallOption) (*DetailResponse, error)
}

type deviceClient struct {
	c           client.Client
	serviceName string
}

func NewDeviceClient(serviceName string, c client.Client) DeviceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "proto"
	}
	return &deviceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *deviceClient) Online(ctx context.Context, in *OnlineRequest, opts ...client.CallOption) (*DetailResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.Online", in)
	out := new(DetailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Offline(ctx context.Context, in *OfflineRequest, opts ...client.CallOption) (*OperationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.Offline", in)
	out := new(OperationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Detail(ctx context.Context, in *DetailRequest, opts ...client.CallOption) (*DetailResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Device.Detail", in)
	out := new(DetailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Device service

type DeviceHandler interface {
	Online(context.Context, *OnlineRequest, *DetailResponse) error
	Offline(context.Context, *OfflineRequest, *OperationResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
	Detail(context.Context, *DetailRequest, *DetailResponse) error
}

func RegisterDeviceHandler(s server.Server, hdlr DeviceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Device{hdlr}, opts...))
}

type Device struct {
	DeviceHandler
}

func (h *Device) Online(ctx context.Context, in *OnlineRequest, out *DetailResponse) error {
	return h.DeviceHandler.Online(ctx, in, out)
}

func (h *Device) Offline(ctx context.Context, in *OfflineRequest, out *OperationResponse) error {
	return h.DeviceHandler.Offline(ctx, in, out)
}

func (h *Device) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.DeviceHandler.List(ctx, in, out)
}

func (h *Device) Detail(ctx context.Context, in *DetailRequest, out *DetailResponse) error {
	return h.DeviceHandler.Detail(ctx, in, out)
}

func init() { proto1.RegisterFile("device.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xdd, 0x4e, 0xc2, 0x30,
	0x18, 0xa5, 0x8c, 0x01, 0x7e, 0xfc, 0x04, 0x2b, 0x26, 0xcb, 0x2e, 0x84, 0xec, 0x8a, 0x2b, 0x8c,
	0x18, 0x85, 0x18, 0x7f, 0x6e, 0xf0, 0xc2, 0x68, 0x82, 0x59, 0x7c, 0x01, 0x64, 0xc5, 0x34, 0xc0,
	0x36, 0xd7, 0x42, 0xc2, 0x0b, 0xf9, 0x64, 0xde, 0xf9, 0x12, 0xa6, 0xed, 0x3a, 0xa8, 0x01, 0x2f,
	0x8c, 0x57, 0x7c, 0xfb, 0x38, 0x3d, 0x3d, 0xa7, 0xe7, 0x40, 0x35, 0x20, 0x2b, 0x3a, 0x21, 0xdd,
	0x38, 0x89, 0x78, 0x84, 0x6d, 0xf9, 0xe3, 0x7d, 0x20, 0xa8, 0x8d, 0xc2, 0x39, 0x0d, 0x89, 0x4f,
	0xde, 0x97, 0x84, 0x71, 0xdc, 0x00, 0x8b, 0xd2, 0xc0, 0x41, 0x6d, 0xd4, 0x39, 0xf0, 0xc5, 0x88,
	0x31, 0x14, 0xc2, 0x28, 0x20, 0x4e, 0x5e, 0xae, 0xe4, 0x8c, 0x2f, 0x40, 0x10, 0xc4, 0xcc, 0xb1,
	0xda, 0x56, 0xa7, 0xd2, 0x6b, 0x29, 0xd6, 0xae, 0x41, 0xd5, 0x7d, 0x16, 0x88, 0xfb, 0x90, 0x27,
	0x6b, 0x5f, 0xa1, 0xdd, 0x01, 0xc0, 0x66, 0x29, 0xae, 0x9a, 0x91, 0xb5, 0xbe, 0x6a, 0x46, 0xd6,
	0xb8, 0x09, 0xf6, 0x6a, 0x3c, 0x5f, 0xea, 0xbb, 0xd4, 0xc7, 0x55, 0x7e, 0x80, 0xbc, 0x5b, 0xa8,
	0x8f, 0xa6, 0xd3, 0xdf, 0x85, 0xba, 0x50, 0x56, 0x1e, 0x1f, 0x82, 0x94, 0x20, 0xfb, 0xf6, 0x5a,
	0x50, 0x79, 0xa2, 0x8c, 0xef, 0x3d, 0xec, 0xdd, 0x40, 0x6d, 0x48, 0xf8, 0x98, 0xce, 0xff, 0xc6,
	0xff, 0x89, 0xa0, 0xae, 0xcf, 0xb3, 0x38, 0x0a, 0x19, 0x31, 0xe0, 0xc8, 0x84, 0x6b, 0xf2, 0xfc,
	0x86, 0xfc, 0x04, 0x20, 0x92, 0xaf, 0xf7, 0x42, 0x17, 0xc4, 0xb1, 0xe4, 0x1f, 0x5b, 0x9b, 0x2c,
	0x85, 0xc2, 0x56, 0x0a, 0x97, 0x3a, 0x05, 0x5b, 0xa6, 0xd0, 0x4e, 0x53, 0x30, 0x75, 0xfc, 0x6b,
	0x0c, 0x8f, 0x70, 0x38, 0x8a, 0x49, 0x32, 0xe6, 0x34, 0x0a, 0x33, 0xa3, 0x0d, 0xb0, 0x12, 0xc2,
	0x25, 0x41, 0xd9, 0x17, 0xa3, 0x10, 0x3b, 0xd1, 0x95, 0xb1, 0x7d, 0x39, 0x0b, 0xd4, 0x82, 0xbd,
	0xa5, 0xce, 0xc4, 0xe8, 0xdd, 0x41, 0x55, 0x65, 0x92, 0xf2, 0x9c, 0x42, 0x49, 0x3d, 0x10, 0x73,
	0x90, 0x34, 0x74, 0xbc, 0xd3, 0x90, 0xaf, 0x51, 0xbd, 0x2f, 0x04, 0xc5, 0xa1, 0x9c, 0x71, 0x1f,
	0x8a, 0xaa, 0x7c, 0xb8, 0xb9, 0xab, 0x8b, 0xee, 0x6e, 0x2a, 0x2f, 0x87, 0xaf, 0xa1, 0x94, 0x16,
	0x0b, 0x6b, 0x8c, 0x59, 0x34, 0xd7, 0xd1, 0xeb, 0x9f, 0xc6, 0xbd, 0x1c, 0x3e, 0x83, 0x82, 0xb0,
	0x80, 0x71, 0x8a, 0xd9, 0xea, 0x98, 0x7b, 0x64, 0xec, 0xb2, 0x23, 0x7d, 0xa1, 0x59, 0x88, 0xc8,
	0x94, 0x1a, 0xbd, 0xdb, 0xab, 0xf4, 0xb5, 0x28, 0xf7, 0xe7, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xee, 0xc8, 0x1c, 0x7b, 0xc9, 0x03, 0x00, 0x00,
}
